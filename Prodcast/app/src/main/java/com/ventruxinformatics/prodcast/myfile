              // Build the dialog and set up the button click handlers
                    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                    // Get the layout inflater
                    LayoutInflater inflater = getActivity().getLayoutInflater();

                    // Inflate and set the layout for the dialog
                    // Pass null as the parent view because its going in the dialog layout
                    View v = inflater.inflate(R.layout.qty_dialog, null);
                    TextView tv = (TextView) v.findViewById(R.id.product_detail);
                     qty = (EditText) view.findViewById(R.id.qty);
                    subTotal = (TextView) view.findViewById(R.id.subTotal);
                    float unitPrice;

                    if (SessionInformations.getInstance().getEmployee().getCustomerType().equals("R")) {
                        unitPrice = product.getRetailPrice();
                    } else {
                        unitPrice = product.getUnitPrice();
                    }


                    tv.setText("Product Name : " + product.getProductName() + "   UnitPrice : " + unitPrice);

/*                    subTotal.setText("SubTotal : 0.00");


                    qty.addTextChangedListener(new TextWatcher() {
                        @Override
                        public void beforeTextChanged(CharSequence s, int start, int count,
                                                      int after) {

                            //subTotal.setText("SubTotal:0.00");
                        }

                        @Override
                        public void onTextChanged(final CharSequence s, int start, int before, int count) {

                            //subTotal.setText("SubTotal : "+calculateTotal(product,Integer.valueOf(qty.getText().toString())));

                        }

                        @Override
                        public void afterTextChanged(final Editable s) {
                            //avoid triggering event when text is too short
                            String newValue = s.toString();
                            if (newValue.trim().length() == 0) newValue = "0";

                            else {
                                int newQuantity = Integer.parseInt(newValue);
                                subTotal.setText("SubTotal : " + calculateTotal(product, newQuantity));
                            }

                        }
                    });*/
                    builder.setView(v);
                    builder.setPositiveButton("YES",
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog, int which) {

                                    // Write your code here to execute after dialog
                                    String quantity = qty.getText().toString();
                                    if (TextUtils.isEmpty(quantity)) {
                                        qty.setError(getString(R.string.required_quantity));
                                        qty.requestFocus();
                                    }
                                    if (!TextUtils.isEmpty(quantity)) {
                                        final OrderDetails orderDetails = new OrderDetails();

                                        System.out.println(qty.getText() + "success");
                                        orderDetails.setProduct(product);
                                        orderDetails.setQuantity(Integer.parseInt(quantity));

                                        SessionInformations.getInstance().getEntry().add(orderDetails);

                                    }


                                }
                            });
                    // Setting Negative "NO" Button
                    builder.setNegativeButton("NO",
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog, int which) {
                                    // Write your code here to execute after dialog

                                    dialog.cancel();
                                    //      System.out.println("Closed");
                                }
                            });

                    builder.create();
                    builder.show();

                }
            });
        }

            return rootView;
        }
*/
